<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rspec | Hi Llight and Deep Shade.]]></title>
  <link href="http://iori-o.github.com/blog/categories/rspec/atom.xml" rel="self"/>
  <link href="http://iori-o.github.com/"/>
  <updated>2013-04-03T22:29:58+09:00</updated>
  <id>http://iori-o.github.com/</id>
  <author>
    <name><![CDATA[Iori ONDA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rspec の expect 記法を使ったテストの書き方]]></title>
    <link href="http://iori-o.github.com/blog/2013/04/03/rspec-expectations/"/>
    <updated>2013-04-03T00:06:00+09:00</updated>
    <id>http://iori-o.github.com/blog/2013/04/03/rspec-expectations</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/rspec/rspec-expectations">Rspec</a> では version 2.11 から</p>

<p><code>ruby
foo.should eq(bar)
foo.should_not eq(bar)
</code></p>

<p>から</p>

<p><code>ruby
expect(foo).to eq(bar)
expect(foo).not eq(bar)
</code></p>

<p>と書くようになった。</p>

<p>なぜ新しい記法を導入したかの説明は<a href="http://myronmars.to/n/dev-blog/2012/06/rspecs-new-expectation-syntax">RSpec's New Expectation Syntax</a>に書かれている。
簡単にまとめると</p>

<ul>
<li><p><code>should</code> は <code>Kernel</code> にあるので、<code>Kernel</code> を <code>include</code> しない <code>BasicObject</code> を継承したクラスのインスタンスに対して <code>should</code> を呼ぶと不具合がある。</p></li>
<li><p>標準ライブラリの <code>delegate</code> は <code>Kernel</code> のメソッドの一部だけを <code>include</code> しているので、<code>rspec</code> と <code>delegate</code> のロードする順序によって <code>should</code> の挙動がおかしくなる。</p></li>
</ul>


<p>という理由のようだ。</p>

<h2>基本的な書き方</h2>

<p>基本的には先述の通り</p>

<ul>
<li><code>foo.should</code> を <code>expect(foo).to</code> に</li>
<li><code>foo.should_not</code> を <code>expect(foo).not</code> に</li>
</ul>


<p>書き換えるだけで対応できる。</p>

<p>と、まとめていたらほぼ同じ内容が<a href="http://qiita.com/items/d880250adc8cdbe7a32f">RSpecのshouldはもう古い!新しい記法expectを使おう!</a>にまとまっていた。</p>
]]></content>
  </entry>
  
</feed>
