<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Hi Llight and The Deep Shade.]]></title>
  <link href="http://iori-o.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://iori-o.github.io/"/>
  <updated>2013-12-12T00:16:31+09:00</updated>
  <id>http://iori-o.github.io/</id>
  <author>
    <name><![CDATA[Iori ONDA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[プロジェクトでパーフェクト Ruby を読んでます]]></title>
    <link href="http://iori-o.github.io/blog/2013/12/11/perfect-ruby-2013-12-11/"/>
    <updated>2013-12-11T23:46:00+09:00</updated>
    <id>http://iori-o.github.io/blog/2013/12/11/perfect-ruby-2013-12-11</id>
    <content type="html"><![CDATA[<p><a href="http://www.adventar.org/calendars/198">パーフェクトRuby Advent Calendar 2013</a> 11日目の記事です。</p>

<p>10日目の記事は<a href="http://www.clear-code.com/blog/2013/12/10.html">パーフェクトRubyのおかげでYARDがよくなってGroongaイベントも開催できた話</a>です。</p>

<h2>あらまし</h2>

<p>現在参画しているプロジェクトでは、週に火曜日と水曜日の2日間、それぞれ1時間づつ時間を確保してプロジェクトのメンバー全員で勉強会(読書会)を行っています。
以前は<a href="http://www.amazon.co.jp/dp/4873115655">リーダブルコード</a>を読んでいたんですが、11月上旬に読み終わってしまったので「次は何を読むかー」となっていました。
その時点では、特に何を読もうかというものは決まっていなかったので、プロジェクトのメンバーの中で「これを読みたい(読ませたい!!)」本を何冊か候補にあげ、多数決で読む本を決めました。</p>

<p>候補に上がった書籍は以下の通りです。</p>

<p>どれもいい本です。</p>

<ul>
<li><a href="http://www.oreilly.co.jp/books/9784873114026/">プロダクティブ・プログラマ</a></li>
<li><a href="http://www.amazon.co.jp/dp/4048678841/">リファクタリング Ruby エディション</a></li>
<li><a href="http://www.junkudo.co.jp/mj/products/detail.php?product_id=0100845511">達人プログラマ</a></li>
<li><a href="http://www.amazon.co.jp/dp/4774158798/">パーフェクト Ruby</a></li>
<li><a href="http://www.amazon.co.jp/exec/obidos/asin/4774142948">エキスパートのためのMySQL[運用+管理]トラブルシューティングガイド</a></li>
<li><a href="http://www.amazon.co.jp/dp/4774142042">Webを支える技術</a></li>
</ul>


<p>リーダブルコードを読んでいた時は、プロジェクトのメンバー全員をいくつかのグループに分けて読んでいたんですけど、さすがにこれだけの本が候補にあがると票が分かれるわけで、今は投票の多かった本の上位3冊をグループに分かれて読み進めてます。
どの本もいい本なので(2回目)、自分も票を入れる時には結構悩んで合計で3票くらい入れています。
個人的には「パーフェクト Ruby」 → 「リファクタリング Ruby エディション」 or 「メタプログラミングRuby」 の順番で読むと理解が進むかなー、と思っていたので1票目はパーフェクト Ruby に入れました。
パーフェクトRuby 以外ではどの2冊が選ばれたかは秘密です。</p>

<h2>実際に読んでみて</h2>

<p>今は読むセクションを決め、各自が黙読した上で疑問に思ったこと、みんなで話したいこと対して、知っている人が答える、実際にコードを書いて動作を確認してみるなどをして進めています。
複数人で読んでいると自分が疑問に思わなかったようなところが疑問としてあがったり、似たようなトピックでも違う方向からの意見があったりして面白いです。</p>

<p>今日はちょうど <strong>4-2 モジュール</strong> の部分を読んでいたのですが、<code>module</code> の <code>include</code> と <code>extend</code> がよくわからないという話がありました。
何がちょうどかというと、昨日 <a href="https://bugs.ruby-lang.org/issues/9236#change-43578">include + include + alias_method + super behaviour inconsistency between 1.9 and 2.0</a> という Issue があったのでした。
なので、今日の勉強会の後半では先ほどの Issue の内容について、どのような挙動で 何故 <code>stack level too deep</code> になってしまうか、また何故ならないのか、の話をしていました。</p>

<h2>終わりに</h2>

<p>今、パーフェクト Ruby を読んでいるメンバーですが、Ruby に精通しているメンバーもいれば、Ruby に触れてから1年弱のメンバーもいます。
色んなレベルの人が、それぞれの小さな疑問から気になるトピックまでを網羅している素敵な本です。
1人で読むのに飽きた人は、まだ読んでいない人と一緒に色々と話ながら読むと新しい発見があったりするかもしれないですよ。</p>

<p>明日のパーフェクトRuby Advent Calendar は多分すがさんです。</p>
]]></content>
  </entry>
  
</feed>
